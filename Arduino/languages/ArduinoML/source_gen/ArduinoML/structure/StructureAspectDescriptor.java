package ArduinoML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptActuator = createDescriptorForActuator();
  /*package*/ final ConceptDescriptor myConceptApp = createDescriptorForApp();
  /*package*/ final ConceptDescriptor myConceptBinaryExpression = createDescriptorForBinaryExpression();
  /*package*/ final ConceptDescriptor myConceptBlock = createDescriptorForBlock();
  /*package*/ final ConceptDescriptor myConceptBrick = createDescriptorForBrick();
  /*package*/ final ConceptDescriptor myConceptButton = createDescriptorForButton();
  /*package*/ final ConceptDescriptor myConceptBuzzer = createDescriptorForBuzzer();
  /*package*/ final ConceptDescriptor myConceptCondition = createDescriptorForCondition();
  /*package*/ final ConceptDescriptor myConceptDelay = createDescriptorForDelay();
  /*package*/ final ConceptDescriptor myConceptDigitalAssignement = createDescriptorForDigitalAssignement();
  /*package*/ final ConceptDescriptor myConceptDigitalAtomicCondition = createDescriptorForDigitalAtomicCondition();
  /*package*/ final ConceptDescriptor myConceptLed = createDescriptorForLed();
  /*package*/ final ConceptDescriptor myConceptSensor = createDescriptorForSensor();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptSwitchState = createDescriptorForSwitchState();
  /*package*/ final EnumerationDescriptor myEnumerationOPERATOR = new EnumerationDescriptor_OPERATOR();
  /*package*/ final EnumerationDescriptor myEnumerationSIGNAL = new EnumerationDescriptor_SIGNAL();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptActuator, myConceptApp, myConceptBinaryExpression, myConceptBlock, myConceptBrick, myConceptButton, myConceptBuzzer, myConceptCondition, myConceptDelay, myConceptDigitalAssignement, myConceptDigitalAtomicCondition, myConceptLed, myConceptSensor, myConceptState, myConceptStatement, myConceptSwitchState);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Actuator:
        return myConceptActuator;
      case LanguageConceptSwitch.App:
        return myConceptApp;
      case LanguageConceptSwitch.BinaryExpression:
        return myConceptBinaryExpression;
      case LanguageConceptSwitch.Block:
        return myConceptBlock;
      case LanguageConceptSwitch.Brick:
        return myConceptBrick;
      case LanguageConceptSwitch.Button:
        return myConceptButton;
      case LanguageConceptSwitch.Buzzer:
        return myConceptBuzzer;
      case LanguageConceptSwitch.Condition:
        return myConceptCondition;
      case LanguageConceptSwitch.Delay:
        return myConceptDelay;
      case LanguageConceptSwitch.DigitalAssignement:
        return myConceptDigitalAssignement;
      case LanguageConceptSwitch.DigitalAtomicCondition:
        return myConceptDigitalAtomicCondition;
      case LanguageConceptSwitch.Led:
        return myConceptLed;
      case LanguageConceptSwitch.Sensor:
        return myConceptSensor;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.SwitchState:
        return myConceptSwitchState;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationOPERATOR, myEnumerationSIGNAL);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForActuator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Actuator", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391d8b9L);
    b.class_(false, true, false);
    // extends: ArduinoML.structure.Brick
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391daddL);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/3743497150002223289");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "App", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391f50eL);
    b.class_(false, false, true);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/3743497150002230542");
    b.version(3);
    b.associate("init_state", 0x4d1785670cfbed0dL).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x4d1785670cfbb144L).optional(false).origin("5555055343030758669").done();
    b.aggregate("bricks", 0x33f392d2f391f648L).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391daddL).optional(false).ordered(true).multiple(true).origin("3743497150002230856").done();
    b.aggregate("states", 0x4d1785670cfbe820L).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x4d1785670cfbb144L).optional(false).ordered(true).multiple(true).origin("5555055343030757408").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "BinaryExpression", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd6226L);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Condition
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5afbL);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295066150");
    b.version(3);
    b.property("operator", 0x6035c5486edd661eL).type(MetaIdFactory.dataTypeId(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd61cdL)).origin("6932664116295067166").done();
    b.aggregate("conditions", 0x6035c5486ee11c69L).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5afbL).optional(false).ordered(true).multiple(true).origin("6932664116295310441").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Block", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5320L);
    b.class_(false, true, false);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295062304");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBrick() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Brick", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391daddL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/3743497150002223837");
    b.version(3);
    b.property("pin", 0x33f392d2f391e972L).type(PrimitiveTypeId.INTEGER).origin("3743497150002227570").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForButton() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Button", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd9d2dL);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Sensor
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391eafcL);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295081261");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBuzzer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Buzzer", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd9617L);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Actuator
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391d8b9L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295079447");
    b.version(3);
    b.property("frequency", 0x6035c5486edd98f1L).type(PrimitiveTypeId.INTEGER).origin("6932664116295080177").done();
    b.property("duration", 0x6035c5486edd9b5eL).type(PrimitiveTypeId.INTEGER).origin("6932664116295080798").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Condition", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5afbL);
    b.class_(false, false, true);
    // extends: ArduinoML.structure.Block
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5320L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295064315");
    b.version(3);
    b.aggregate("blocks", 0x6035c5486ee12e01L).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5320L).optional(false).ordered(true).multiple(true).origin("6932664116295314945").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDelay() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Delay", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd8f92L);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Statement
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd56c6L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295077778");
    b.version(3);
    b.property("delayInMs", 0x6035c5486edd9179L).type(PrimitiveTypeId.INTEGER).origin("6932664116295078265").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDigitalAssignement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "DigitalAssignement", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5d33L);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Statement
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd56c6L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295064883");
    b.version(3);
    b.property("value", 0x6035c5486ee0f0f1L).type(MetaIdFactory.dataTypeId(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x4d1785670cfc7e42L)).origin("6932664116295299313").done();
    b.associate("actuator", 0x6035c5486edd890dL).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391d8b9L).optional(false).origin("6932664116295076109").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDigitalAtomicCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "DigitalAtomicCondition", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd679eL);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Condition
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5afbL);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295067550");
    b.version(3);
    b.property("value", 0x6035c5486edd6cddL).type(MetaIdFactory.dataTypeId(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x4d1785670cfc7e42L)).origin("6932664116295068893").done();
    b.property("operator", 0x6035c5486edd6f7bL).type(MetaIdFactory.dataTypeId(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd61cdL)).origin("6932664116295069563").done();
    b.associate("sensor", 0x6035c5486edd7292L).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391eafcL).optional(false).origin("6932664116295070354").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLed() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Led", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd9461L);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Actuator
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391d8b9L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295079009");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Sensor", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391eafcL);
    b.class_(false, true, false);
    // extends: ArduinoML.structure.Brick
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x33f392d2f391daddL);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/3743497150002227964");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "State", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x4d1785670cfbb144L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/5555055343030743364");
    b.version(3);
    b.aggregate("block", 0x6035c5486ee1b63bL).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5320L).optional(false).ordered(true).multiple(false).origin("6932664116295349819").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Statement", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd56c6L);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Block
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd5320L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295063238");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSwitchState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "SwitchState", 0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd8d3dL);
    b.class_(false, false, false);
    // extends: ArduinoML.structure.Statement
    b.super_(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x6035c5486edd56c6L);
    b.origin("r:fc2ace7f-3179-4cd5-b9f8-784768ae9487(ArduinoML.structure)/6932664116295077181");
    b.version(3);
    b.associate("state", 0x6035c5486ee121b2L).target(0x7d30aba23d1348acL, 0xb67656f691260962L, 0x4d1785670cfbb144L).optional(false).origin("6932664116295311794").done();
    return b.create();
  }
}
